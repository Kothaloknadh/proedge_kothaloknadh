import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, TouchableOpacity, Modal, StyleSheet } from 'react-native';
import Contacts from 'react-native-contacts';

const ContactApp = () => {
  const [contacts, setContacts] = useState([]);
  const [searchText, setSearchText] = useState('');
  const [selectedContact, setSelectedContact] = useState(null);

  useEffect(() => {
    loadContacts();
  }, []);

  const loadContacts = () => {
    Contacts.getAll((err, retrievedContacts) => {
      if (err) {
        console.log('Error retrieving contacts:', err);
      } else {
        setContacts(retrievedContacts);
      }
    });
  };

  const filterContacts = () => {
    if (searchText === '') {
      return contacts;
    } else {
      return contacts.filter((contact) =>
        contact.givenName.toLowerCase().includes(searchText.toLowerCase())
      );
    }
  };

  const handleContactClick = (contact) => {
    setSelectedContact(contact);
  };

  const renderContacts = () => {
    const filteredContacts = filterContacts();
    return filteredContacts.map((contact) => (
      <TouchableOpacity
        key={contact.recordID}
        style={styles.contactItem}
        onPress={() => handleContactClick(contact)}
      >
        <Text style={styles.contactName}>{contact.givenName}</Text>
        <Text>{contact.phoneNumbers[0]?.number}</Text>
      </TouchableOpacity>
    ));
  };

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.searchBox}
        placeholder="Search..."
        value={searchText}
        onChangeText={(text) => setSearchText(text)}
      />
      {renderContacts()}
      <Modal
        visible={selectedContact !== null}
        transparent={true}
        animationType="fade"
        onRequestClose={() => setSelectedContact(null)}
      >
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <Text style={styles.contactName}>{selectedContact?.givenName}</Text>
            <Text>{selectedContact?.phoneNumbers[0]?.number}</Text>
            <TouchableOpacity
              style={styles.dismissButton}
              onPress={() => setSelectedContact(null)}
            >
              <Text style={styles.dismissButtonText}>Dismiss</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 40,
    paddingHorizontal: 20,
  },
  searchBox: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 20,
    paddingHorizontal: 10,
  },
  contactItem: {
    marginBottom: 10,
  },
  contactName: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  modalContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modalContent: {
    backgroundColor: 'white',
    padding: 20,
    borderRadius: 10,
  },
  dismissButton: {
    marginTop: 20,
    alignSelf: 'flex-end',
  },
  dismissButtonText: {
    color: 'blue',
  },
});

export default ContactApp;
